<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.buildp.dao.mapper.TStockInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ai.buildp.dao.model.TStockInfo" >
    <id column="stock_id" property="stockId" jdbcType="BIGINT" />
    <result column="material_id" property="materialId" jdbcType="BIGINT" />
    <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="avail_count" property="availCount" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stock_id, material_id, supplier_id, count, avail_count, create_time, create_user, 
    update_time, update_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.buildp.dao.model.TStockInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_stock_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       limit #{limitClauseStart,jdbcType=INTEGER}, #{limitClauseCount,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_stock_info
    where stock_id = #{stockId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_stock_info
    where stock_id = #{stockId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.buildp.dao.model.TStockInfoExample" >
    delete from t_stock_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.buildp.dao.model.TStockInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="stockId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_stock_info (material_id, supplier_id, count, 
      avail_count, create_time, create_user, 
      update_time, update_user)
    values (#{materialId,jdbcType=BIGINT}, #{supplierId,jdbcType=BIGINT}, #{count,jdbcType=INTEGER}, 
      #{availCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.buildp.dao.model.TStockInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="stockId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_stock_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="availCount != null" >
        avail_count,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="materialId != null" >
        #{materialId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="availCount != null" >
        #{availCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.buildp.dao.model.TStockInfoExample" resultType="java.lang.Integer" >
    select count(*) from t_stock_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_stock_info
    <set >
      <if test="record.stockId != null" >
        stock_id = #{record.stockId,jdbcType=BIGINT},
      </if>
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=BIGINT},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=BIGINT},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.availCount != null" >
        avail_count = #{record.availCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_stock_info
    set stock_id = #{record.stockId,jdbcType=BIGINT},
      material_id = #{record.materialId,jdbcType=BIGINT},
      supplier_id = #{record.supplierId,jdbcType=BIGINT},
      count = #{record.count,jdbcType=INTEGER},
      avail_count = #{record.availCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.buildp.dao.model.TStockInfo" >
    update t_stock_info
    <set >
      <if test="materialId != null" >
        material_id = #{materialId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="availCount != null" >
        avail_count = #{availCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where stock_id = #{stockId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.buildp.dao.model.TStockInfo" >
    update t_stock_info
    set material_id = #{materialId,jdbcType=BIGINT},
      supplier_id = #{supplierId,jdbcType=BIGINT},
      count = #{count,jdbcType=INTEGER},
      avail_count = #{availCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where stock_id = #{stockId,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="com.ai.buildp.dao.model.TStockInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="stockId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_stock_info (material_id, 
      supplier_id, count, avail_count, 
      create_time, create_user, update_time, 
      update_user)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.materialId,jdbcType=BIGINT}, 
      #{item.supplierId,jdbcType=BIGINT}, #{item.count,jdbcType=INTEGER}, #{item.availCount,jdbcType=INTEGER}, 
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.createUser,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, 
      #{item.updateUser,jdbcType=VARCHAR})</foreach>
  </insert>
</mapper>