<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.buildp.dao.mapper.TAuthMenuMapper" >
  <resultMap id="BaseResultMap" type="com.ai.buildp.dao.model.TAuthMenu" >
    <id column="menu_id" property="menuId" jdbcType="BIGINT" />
    <result column="parent_menu" property="parentMenu" jdbcType="BIGINT" />
    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
    <result column="menu_url" property="menuUrl" jdbcType="VARCHAR" />
    <result column="menu_level" property="menuLevel" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    menu_id, parent_menu, menu_name, menu_url, menu_level, order_num, remark, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.buildp.dao.model.TAuthMenuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_auth_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       limit #{limitClauseStart,jdbcType=INTEGER}, #{limitClauseCount,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_auth_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_auth_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.buildp.dao.model.TAuthMenuExample" >
    delete from t_auth_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.buildp.dao.model.TAuthMenu" >
    <selectKey resultType="java.lang.Long" keyProperty="menuId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_auth_menu (parent_menu, menu_name, menu_url, 
      menu_level, order_num, remark, 
      create_time)
    values (#{parentMenu,jdbcType=BIGINT}, #{menuName,jdbcType=VARCHAR}, #{menuUrl,jdbcType=VARCHAR}, 
      #{menuLevel,jdbcType=VARCHAR}, #{orderNum,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.buildp.dao.model.TAuthMenu" >
    <selectKey resultType="java.lang.Long" keyProperty="menuId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_auth_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="parentMenu != null" >
        parent_menu,
      </if>
      <if test="menuName != null" >
        menu_name,
      </if>
      <if test="menuUrl != null" >
        menu_url,
      </if>
      <if test="menuLevel != null" >
        menu_level,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="parentMenu != null" >
        #{parentMenu,jdbcType=BIGINT},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuLevel != null" >
        #{menuLevel,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.buildp.dao.model.TAuthMenuExample" resultType="java.lang.Integer" >
    select count(*) from t_auth_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_auth_menu
    <set >
      <if test="record.menuId != null" >
        menu_id = #{record.menuId,jdbcType=BIGINT},
      </if>
      <if test="record.parentMenu != null" >
        parent_menu = #{record.parentMenu,jdbcType=BIGINT},
      </if>
      <if test="record.menuName != null" >
        menu_name = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuUrl != null" >
        menu_url = #{record.menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.menuLevel != null" >
        menu_level = #{record.menuLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null" >
        order_num = #{record.orderNum,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_auth_menu
    set menu_id = #{record.menuId,jdbcType=BIGINT},
      parent_menu = #{record.parentMenu,jdbcType=BIGINT},
      menu_name = #{record.menuName,jdbcType=VARCHAR},
      menu_url = #{record.menuUrl,jdbcType=VARCHAR},
      menu_level = #{record.menuLevel,jdbcType=VARCHAR},
      order_num = #{record.orderNum,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.buildp.dao.model.TAuthMenu" >
    update t_auth_menu
    <set >
      <if test="parentMenu != null" >
        parent_menu = #{parentMenu,jdbcType=BIGINT},
      </if>
      <if test="menuName != null" >
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        menu_url = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuLevel != null" >
        menu_level = #{menuLevel,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.buildp.dao.model.TAuthMenu" >
    update t_auth_menu
    set parent_menu = #{parentMenu,jdbcType=BIGINT},
      menu_name = #{menuName,jdbcType=VARCHAR},
      menu_url = #{menuUrl,jdbcType=VARCHAR},
      menu_level = #{menuLevel,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="com.ai.buildp.dao.model.TAuthMenu" >
    <selectKey resultType="java.lang.Long" keyProperty="menuId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_auth_menu (parent_menu, 
      menu_name, menu_url, menu_level, 
      order_num, remark, create_time
      )
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.parentMenu,jdbcType=BIGINT}, 
      #{item.menuName,jdbcType=VARCHAR}, #{item.menuUrl,jdbcType=VARCHAR}, #{item.menuLevel,jdbcType=VARCHAR}, 
      #{item.orderNum,jdbcType=BIGINT}, #{item.remark,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}
      )</foreach>
  </insert>
</mapper>