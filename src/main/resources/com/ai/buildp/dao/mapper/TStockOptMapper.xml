<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.buildp.dao.mapper.TStockOptMapper" >
  <resultMap id="BaseResultMap" type="com.ai.buildp.dao.model.TStockOpt" >
    <id column="stock_opt_id" property="stockOptId" jdbcType="BIGINT" />
    <result column="stock_id" property="stockId" jdbcType="BIGINT" />
    <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
    <result column="material_id" property="materialId" jdbcType="BIGINT" />
    <result column="opt_type" property="optType" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_staff" property="createStaff" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stock_opt_id, stock_id, supplier_id, material_id, opt_type, count, create_time, create_staff, 
    remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.buildp.dao.model.TStockOptExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_stock_opt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       limit #{limitClauseStart,jdbcType=INTEGER}, #{limitClauseCount,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_stock_opt
    where stock_opt_id = #{stockOptId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_stock_opt
    where stock_opt_id = #{stockOptId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.buildp.dao.model.TStockOptExample" >
    delete from t_stock_opt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.buildp.dao.model.TStockOpt" >
    <selectKey resultType="java.lang.Long" keyProperty="stockOptId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_stock_opt (stock_id, supplier_id, material_id, 
      opt_type, count, create_time, 
      create_staff, remark)
    values (#{stockId,jdbcType=BIGINT}, #{supplierId,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT}, 
      #{optType,jdbcType=VARCHAR}, #{count,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createStaff,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.buildp.dao.model.TStockOpt" >
    <selectKey resultType="java.lang.Long" keyProperty="stockOptId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_stock_opt
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stockId != null" >
        stock_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="optType != null" >
        opt_type,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createStaff != null" >
        create_staff,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stockId != null" >
        #{stockId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=BIGINT},
      </if>
      <if test="optType != null" >
        #{optType,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        #{createStaff,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.buildp.dao.model.TStockOptExample" resultType="java.lang.Integer" >
    select count(*) from t_stock_opt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_stock_opt
    <set >
      <if test="record.stockOptId != null" >
        stock_opt_id = #{record.stockOptId,jdbcType=BIGINT},
      </if>
      <if test="record.stockId != null" >
        stock_id = #{record.stockId,jdbcType=BIGINT},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=BIGINT},
      </if>
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=BIGINT},
      </if>
      <if test="record.optType != null" >
        opt_type = #{record.optType,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createStaff != null" >
        create_staff = #{record.createStaff,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_stock_opt
    set stock_opt_id = #{record.stockOptId,jdbcType=BIGINT},
      stock_id = #{record.stockId,jdbcType=BIGINT},
      supplier_id = #{record.supplierId,jdbcType=BIGINT},
      material_id = #{record.materialId,jdbcType=BIGINT},
      opt_type = #{record.optType,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_staff = #{record.createStaff,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.buildp.dao.model.TStockOpt" >
    update t_stock_opt
    <set >
      <if test="stockId != null" >
        stock_id = #{stockId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="materialId != null" >
        material_id = #{materialId,jdbcType=BIGINT},
      </if>
      <if test="optType != null" >
        opt_type = #{optType,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createStaff != null" >
        create_staff = #{createStaff,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where stock_opt_id = #{stockOptId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.buildp.dao.model.TStockOpt" >
    update t_stock_opt
    set stock_id = #{stockId,jdbcType=BIGINT},
      supplier_id = #{supplierId,jdbcType=BIGINT},
      material_id = #{materialId,jdbcType=BIGINT},
      opt_type = #{optType,jdbcType=VARCHAR},
      count = #{count,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_staff = #{createStaff,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where stock_opt_id = #{stockOptId,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" parameterType="com.ai.buildp.dao.model.TStockOpt" >
    <selectKey resultType="java.lang.Long" keyProperty="stockOptId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_stock_opt (stock_id, 
      supplier_id, material_id, opt_type, 
      count, create_time, create_staff, 
      remark)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.stockId,jdbcType=BIGINT}, 
      #{item.supplierId,jdbcType=BIGINT}, #{item.materialId,jdbcType=BIGINT}, #{item.optType,jdbcType=VARCHAR}, 
      #{item.count,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.createStaff,jdbcType=VARCHAR}, 
      #{item.remark,jdbcType=VARCHAR})</foreach>
  </insert>
</mapper>