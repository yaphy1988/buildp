<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.buildp.dao.mapper.TBaseRegionMapper" >
  <resultMap id="BaseResultMap" type="com.ai.buildp.dao.model.TBaseRegion" >
    <id column="REGION_CODE" property="regionCode" jdbcType="VARCHAR" />
    <result column="REGION_NAME" property="regionName" jdbcType="VARCHAR" />
    <result column="PARENT_CODE" property="parentCode" jdbcType="VARCHAR" />
    <result column="INITIAL_CHAR" property="initialChar" jdbcType="VARCHAR" />
    <result column="INITIAL_PINYIN" property="initialPinyin" jdbcType="VARCHAR" />
    <result column="FULL_PINYIN" property="fullPinyin" jdbcType="VARCHAR" />
    <result column="REGION_SUFFIX" property="regionSuffix" jdbcType="VARCHAR" />
    <result column="AREA_CODE" property="areaCode" jdbcType="VARCHAR" />
    <result column="ORDER_NUM" property="orderNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    REGION_CODE, REGION_NAME, PARENT_CODE, INITIAL_CHAR, INITIAL_PINYIN, FULL_PINYIN, 
    REGION_SUFFIX, AREA_CODE, ORDER_NUM
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.buildp.dao.model.TBaseRegionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_base_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClauseStart != null and limitClauseStart >= 0" >
       limit #{limitClauseStart,jdbcType=INTEGER}, #{limitClauseCount,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_base_region
    where REGION_CODE = #{regionCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_base_region
    where REGION_CODE = #{regionCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.buildp.dao.model.TBaseRegionExample" >
    delete from t_base_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.buildp.dao.model.TBaseRegion" >
    <selectKey resultType="java.lang.String" keyProperty="regionCode" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_base_region (REGION_NAME, PARENT_CODE, INITIAL_CHAR, 
      INITIAL_PINYIN, FULL_PINYIN, REGION_SUFFIX, 
      AREA_CODE, ORDER_NUM)
    values (#{regionName,jdbcType=VARCHAR}, #{parentCode,jdbcType=VARCHAR}, #{initialChar,jdbcType=VARCHAR}, 
      #{initialPinyin,jdbcType=VARCHAR}, #{fullPinyin,jdbcType=VARCHAR}, #{regionSuffix,jdbcType=VARCHAR}, 
      #{areaCode,jdbcType=VARCHAR}, #{orderNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.buildp.dao.model.TBaseRegion" >
    <selectKey resultType="java.lang.String" keyProperty="regionCode" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_base_region
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="regionName != null" >
        REGION_NAME,
      </if>
      <if test="parentCode != null" >
        PARENT_CODE,
      </if>
      <if test="initialChar != null" >
        INITIAL_CHAR,
      </if>
      <if test="initialPinyin != null" >
        INITIAL_PINYIN,
      </if>
      <if test="fullPinyin != null" >
        FULL_PINYIN,
      </if>
      <if test="regionSuffix != null" >
        REGION_SUFFIX,
      </if>
      <if test="areaCode != null" >
        AREA_CODE,
      </if>
      <if test="orderNum != null" >
        ORDER_NUM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="regionName != null" >
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null" >
        #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="initialChar != null" >
        #{initialChar,jdbcType=VARCHAR},
      </if>
      <if test="initialPinyin != null" >
        #{initialPinyin,jdbcType=VARCHAR},
      </if>
      <if test="fullPinyin != null" >
        #{fullPinyin,jdbcType=VARCHAR},
      </if>
      <if test="regionSuffix != null" >
        #{regionSuffix,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.buildp.dao.model.TBaseRegionExample" resultType="java.lang.Integer" >
    select count(*) from t_base_region
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_base_region
    <set >
      <if test="record.regionCode != null" >
        REGION_CODE = #{record.regionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regionName != null" >
        REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCode != null" >
        PARENT_CODE = #{record.parentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.initialChar != null" >
        INITIAL_CHAR = #{record.initialChar,jdbcType=VARCHAR},
      </if>
      <if test="record.initialPinyin != null" >
        INITIAL_PINYIN = #{record.initialPinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.fullPinyin != null" >
        FULL_PINYIN = #{record.fullPinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.regionSuffix != null" >
        REGION_SUFFIX = #{record.regionSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null" >
        AREA_CODE = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNum != null" >
        ORDER_NUM = #{record.orderNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_base_region
    set REGION_CODE = #{record.regionCode,jdbcType=VARCHAR},
      REGION_NAME = #{record.regionName,jdbcType=VARCHAR},
      PARENT_CODE = #{record.parentCode,jdbcType=VARCHAR},
      INITIAL_CHAR = #{record.initialChar,jdbcType=VARCHAR},
      INITIAL_PINYIN = #{record.initialPinyin,jdbcType=VARCHAR},
      FULL_PINYIN = #{record.fullPinyin,jdbcType=VARCHAR},
      REGION_SUFFIX = #{record.regionSuffix,jdbcType=VARCHAR},
      AREA_CODE = #{record.areaCode,jdbcType=VARCHAR},
      ORDER_NUM = #{record.orderNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.buildp.dao.model.TBaseRegion" >
    update t_base_region
    <set >
      <if test="regionName != null" >
        REGION_NAME = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null" >
        PARENT_CODE = #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="initialChar != null" >
        INITIAL_CHAR = #{initialChar,jdbcType=VARCHAR},
      </if>
      <if test="initialPinyin != null" >
        INITIAL_PINYIN = #{initialPinyin,jdbcType=VARCHAR},
      </if>
      <if test="fullPinyin != null" >
        FULL_PINYIN = #{fullPinyin,jdbcType=VARCHAR},
      </if>
      <if test="regionSuffix != null" >
        REGION_SUFFIX = #{regionSuffix,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null" >
        AREA_CODE = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        ORDER_NUM = #{orderNum,jdbcType=INTEGER},
      </if>
    </set>
    where REGION_CODE = #{regionCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.buildp.dao.model.TBaseRegion" >
    update t_base_region
    set REGION_NAME = #{regionName,jdbcType=VARCHAR},
      PARENT_CODE = #{parentCode,jdbcType=VARCHAR},
      INITIAL_CHAR = #{initialChar,jdbcType=VARCHAR},
      INITIAL_PINYIN = #{initialPinyin,jdbcType=VARCHAR},
      FULL_PINYIN = #{fullPinyin,jdbcType=VARCHAR},
      REGION_SUFFIX = #{regionSuffix,jdbcType=VARCHAR},
      AREA_CODE = #{areaCode,jdbcType=VARCHAR},
      ORDER_NUM = #{orderNum,jdbcType=INTEGER}
    where REGION_CODE = #{regionCode,jdbcType=VARCHAR}
  </update>
  <insert id="insertBatch" parameterType="com.ai.buildp.dao.model.TBaseRegion" >
    <selectKey resultType="java.lang.String" keyProperty="regionCode" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_base_region (REGION_NAME, 
      PARENT_CODE, INITIAL_CHAR, INITIAL_PINYIN, 
      FULL_PINYIN, REGION_SUFFIX, AREA_CODE, 
      ORDER_NUM)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.regionName,jdbcType=VARCHAR}, 
      #{item.parentCode,jdbcType=VARCHAR}, #{item.initialChar,jdbcType=VARCHAR}, #{item.initialPinyin,jdbcType=VARCHAR}, 
      #{item.fullPinyin,jdbcType=VARCHAR}, #{item.regionSuffix,jdbcType=VARCHAR}, #{item.areaCode,jdbcType=VARCHAR}, 
      #{item.orderNum,jdbcType=INTEGER})</foreach>
  </insert>
</mapper>